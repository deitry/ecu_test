/*
 * start.cpp
 *
 *  Created on: 12.09.2014
 *      Author: Дима
 */

#include "../main.h"
#include "math.h"


using namespace EG;

/**
 * Пусковые мероприятия.
 *
 * Список действий согласно листам от Кузнецова.
 */
//#pragma CODE_SECTION("ramfuncs")
int EC_Engine::Start()
{
	// - до 30 об/мин ничего не происходит - режим ожидания
	// - до 150 об/мин - подача 500 мм3/цикл - не принимаем уставку снаружи
	// - раскручиваем до 300 об/мин - можем начать принимать уставку снаружи
	// - переходим на нормальный режим


	nU = 400;
	for(;;)
		{
			if (manDur)
			{
				cpldLedToggle(LED_GREEN);
			}

			// условие выхода
			if (fabs(nU-nR._val) < 1)
			{
				this->mode = EC_Steady;
				return 0;
			}

			// проверка состояния органов управления
			if (!this->ControlCheck())
			{
				// выработка нового режима - перерасчёт топлива и т.д.
				//this->ModeCalc();
				if (mode != EC_Start)
					return 0;
			}

			// - коррекция углов впрыска
			setInjPhi();
			// - коррекция величины подачи
			//setQCTrans();
			this->ModeCalc();
			this->Monitoring();

		}

/*
 * TODO :
 * 1 - замыкаем реле стартёра
 * 2 - впрыск с ограничением по закону QCmax(Tcool); угол опережения = -5
 * 3 - при n > 150 об/мин реле 1 разомкнуть
 * 4 - выход на 400, переход на режим холостого хода
 */


	do
	{
		// Диагностика каналов контроллера
		/*if (this->SysCheck())
		{
			// если != 0 -> ошибка проверки
			// *индикация неисправности
		}*/
	} while (this->Key());	// здесь - *проверка положения пускового ключа

	// *опрос датчиков Tокр, Tохл
	// TODO : Такого рода запросы можно вынести в отдельные функции, чтобы на выходе иметь
	// сразу boolean, чтобы не приходилось менять в случае чего миллион вхождений.
	if ((this->Tenv() < this->TenvMin) && (this->Tcool() < this->TcoolMin))
	{
		// *прогрев двигателя
	}

	// *определение пусковой подачи топлива - по матрице

	// *включение стартёра

	// *установка начала отсчёта времени t (?)

	// *определение стартового количества топлива, максимальное время работы стартёра
	// (для случая нескольких попыток)

	// *пуск двигателя
	for(;;)	// переделать на while?
	{
		// *пуск произошёл, если текущая частота вращения = n_пуск > n_стартёр, идём дальше
		// *если за максимально допустимое время работы стартёра двигатель не запустился, то
		// выключаем
	}

	// *если что-то не получилось
	if (0)
	{
		// *глохнем - прекращаем подачу топлива, выключаем стартёр
		// *индикация
		return 1;
	}

	return 0;
}




void EC_Engine::setQCSteady(void)
{
	float QC1;

	if (fabs(err) > DIESEL_D_ZONE)
	{
		// пид-закон
		QC1 = kP*err + kI*errI + kD*errD;
		if (QC1 > QCmax) QC1 = QCmax;
		if (QC1 < QCmin) QC1 = QCmin;
		QC = QC1;

		if (!manQC)
			g_step2Us = QCtoUS(QC);

		// TODO : ограничение по Tcool - завести небольшую карту

		//setInjector(g_step1Us, g_step2Us, g_duty1, g_duty2);
		// ждём, пока установятся значения

	}
}
